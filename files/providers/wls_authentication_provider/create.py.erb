# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'


name                      = '<%= authentication_provider_name %>'
control_flag              = '<%= control_flag %>'
providerclassname         = '<%= providerclassname %>'
attributes                = '<%= attributes %>'
attributesvalues          = '<%= attributesvalues %>'
order                     = '<%= order %>'


edit()
startEdit()

try:

    cd('/')
    realmName  = cmo.getSecurityConfiguration().getDefaultRealm()
    path = getPath(realmName)
    cd(path)

    cmo.createAuthenticationProvider(name, providerclassname)

    cd('AuthenticationProviders/'+name)
    if control_flag:
      cmo.setControlFlag(control_flag)

    if attributes:
      if attributesvalues:
          properties=String(attributes).split(";")
          values=String(attributesvalues).split(";")

          numbers  = ['Port','CacheTTL','CacheSize','MaxGroupMembershipSearchLevel']
          booleans = ['KeepAliveEnabled','UseRetrievedUserNameAsPrincipal','IgnoreDuplicateMembership','DigestReplayDetectionEnabled','UseDefaultUserNameMapper','SSLEnabled']
          lists =    ['ActiveTypes']

          i = 0
          for property in properties:

            print "set property " + property + " value "+ values[i]
            if property in numbers:
              print "is a int"
              set(property,int(values[i]))

            elif property in booleans:
              print "is a boolean"
              if values[i] == '1' or values[i] == 1:
                print "True"
                try:
                  set(property,true)
                except:
                  print "failed to set boolean true, trying string"
                  try:
                    set(property, 'true')
                  except:
                    raise
              else:
                try:
                  set(property,false)
                except:
                  print "failed to set boolean false, trying string"
                  try:
                    set(property, 'false')
                  except:
                    raise

            elif property in lists:
              print "is a list"

              list_values=String(values[i]).split("::")
              set(property,jarray.array(list_values, String))

            else:
              print "is a string"
              set(property,values[i])

            i = i + 1

    # Authentication Provider Ordering
    if order:
        print "setting order"

        cd('/'+path)
        order_val = int(order)
        ap = get('AuthenticationProviders')
        total_aps = len(ap)-1
        if order_val > total_aps:
          print "Order value %d exceeds number of authentication providers. Setting to max %d instead." % (order_val, total_aps)
          order_val = total_aps

        if ap[order_val].getKeyProperty('Name') != realmName.getName()+name:
            # Find the current index
            old_index = len(ap)-1
            if order_val > old_index:
                raise Exception("ERROR - Order Value %d is higher than the quantity of Authentication Providers configured. Cannot order." % order_val)

            for provider in ap[::-1]:
                if provider.getKeyProperty('Name') == realmName.getName()+name:
                    print "Ordering %s to position %d" % (name, order_val)
                    ap.insert(order_val, ap.pop(old_index))
                    break

                old_index = old_index - 1

            # Apply the new order
            set('AuthenticationProviders', ap)

    #
    # Set resource specific values
    #
<% provider_specific.each do | name, value | -%>
    current_value = get('<%= name -%>')
    type_array = re.search("<type '(.*)'>", str(type(current_value)))
    current_type = type_array.group(1)
    if current_type == 'int':
        print 'Setting integer property <%= name -%> to <%= value -%>'
        set('<%= name -%>',int('<%= value -%>'))
    elif current_type == 'float':
        print 'Setting float property <%= name -%> to <%= value -%>'
        set('<%= name -%>',float('<%= value -%>'))
    elif current_type == 'array':
        print 'Setting array property <%= name -%> to <%= value-%>'
        set('<%= name -%>', jarray.array('<%= value -%>', String))
    else:
        print 'Setting property <%= name -%> to <%= value -%>'
        #
        # Type is a string or a NoneType
        set('<%= name -%>','<%= value -%>')
<% end -%>

    print "done"
    save()
    activate()
    print "~~~~COMMAND SUCCESFULL~~~~"

except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    print "~~~~COMMAND FAILED~~~~"
    raise