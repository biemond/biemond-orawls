import re
# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'



name            = '<%= authentication_provider_name %>'
control_flag    = '<%= control_flag %>'
order           = '<%= order %>'

edit()
startEdit()

try:

    cd('/')
    realmName  = cmo.getSecurityConfiguration().getDefaultRealm()
    path = getPath(realmName)
    cd(path)

    cd('AuthenticationProviders/'+name)

    #
    # Set resource specific values
    #
<% provider_specific.each do | name, value | -%>
    current_value = get('<%= name -%>')
    type_array = re.search("<type '(.*)'>", str(type(current_value)))
    current_type = type_array.group(1)
    if current_type == 'int':
        print 'Setting integer property <%= name -%> to <%= value -%>'
        set('<%= name -%>',int('<%= value -%>'))
    elif current_type == 'float':
        print 'Setting float property <%= name -%> to <%= value -%>'
        set('<%= name -%>',float('<%= value -%>'))
    elif current_type == 'array':
        print 'Setting array property <%= name -%> to <%= value-%>'
        set('<%= name -%>', jarray.array('<%= value -%>', String))
    else:
        print 'Setting property <%= name -%> to <%= value -%>'
        #
        # Type is a string or a NoneType
        set('<%= name -%>','<%= value -%>')
<% end -%>

    if control_flag:
        cmo.setControlFlag(control_flag)

    if order:
        order_val = int(order)
        cd('/'+path)
        ap = get('AuthenticationProviders')

        if ap[order_val].getKeyProperty('Name') != realmName.getName()+name:
            # Find the current index
            old_index = len(ap)-1
            if order_val > old_index:
                raise Exception("ERROR - Order Value %d is higher than the quantity of Authentication Providers configured. Cannot order." % order_val)

            for provider in ap[::-1]:
                if provider.getKeyProperty('Name') == realmName.getName()+name:
                    print "Ordering %s to position %d" % (name, order_val)
                    ap.insert(order_val, ap.pop(old_index))
                    break

                old_index = old_index - 1

            # Apply the new order
            set('AuthenticationProviders', ap)


    save()
    activate()
    print "~~~~COMMAND SUCCESFULL~~~~"

except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    print "~~~~COMMAND FAILED~~~~"
    raise


