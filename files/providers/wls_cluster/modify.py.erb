weblogicUser         = sys.argv[1] 
weblogicPassword     = sys.argv[2] 
weblogicConnectUrl   = sys.argv[3] 

# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'

connect(weblogicUser,weblogicPassword,weblogicConnectUrl)

name                      = '<%= cluster_name %>'
clusterNodesTargets       = String('<%= servers %>').split(",")
messagingmode             = '<%= messagingmode %>'
migrationbasis            = '<%= migrationbasis %>'
migration_table_name      = '<%= migration_table_name %>'
migration_datasource      = '<%= migration_datasource %>'


datasourceforjobscheduler = '<%= datasourceforjobscheduler %>'

unicastbroadcastchannel   = '<%= unicastbroadcastchannel %>'
multicastaddress          = '<%= multicastaddress %>'
multicastport             = '<%= multicastport %>'

edit()
startEdit()

try:

    cmo = cd('/')
    cl  = cmo.lookupCluster(name)
    editService.getConfigurationManager().removeReferencesToBean(cl)

    cd('/Clusters/'+name)
    cmo.setClusterMessagingMode(messagingmode)

    cmo.setMigrationBasis(migrationbasis)
    if migrationbasis == 'database':
      cmo.setDataSourceForAutomaticMigration(getMBean('/SystemResources/'+migration_datasource))

      if migration_table_name:
         cmo.setAutoMigrationTableName(migration_table_name)


    if unicastbroadcastchannel:
       cmo.setClusterBroadcastChannel(unicastbroadcastchannel)

    if multicastaddress:
       cmo.setMulticastAddress(multicastaddress)

    if multicastport:
      cmo.setMulticastPort(multicastport)

    if datasourceforjobscheduler:
      cmo.setDataSourceForJobScheduler(getMBean('/SystemResources/'+datasourceforjobscheduler))   

    for node in clusterNodesTargets:
      cd('/Servers/'+node)
      cmo.setCluster(getMBean('/Clusters/'+name))

    save()
    activate()          

except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    raise

disconnect()
exit()

