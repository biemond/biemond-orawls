weblogicUser         = sys.argv[1] 
weblogicPassword     = sys.argv[2] 
weblogicConnectUrl   = sys.argv[3] 
domain               = sys.argv[4] 

connect(weblogicUser,weblogicPassword,weblogicConnectUrl)

def quote(text):
    if text:
        return "\"" + str(text).replace("\"", "\"\"") + "\""
    else: 
        return ""

m = ls('/JDBCSystemResources')

f = open("/tmp/wlstScript.out", "w")
print >>f, "name;target;targettype;drivername;jndinames;url;usexa;user;testtablename;globaltransactionsprotocol;extraproperties;extrapropertiesvalues;maxcapacity;initialcapacity;domain"
for token in m.split("dr--"):
    token=token.strip().lstrip().rstrip()
    if token:
        print '___'+token+'___'
        cd('/JDBCSystemResources/'+token + '/JDBCResource/' + token)

        cd('/JDBCSystemResources/' + token + '/JDBCResource/' + token + '/JDBCDriverParams/' + token )
        url      = get('Url')
        driver   = get('DriverName')
        usexa    = str(get('UseXaDataSourceInterface'))
        #password = get('Password')

        cd('/JDBCSystemResources/' + token + '/JDBCResource/' + token + '/JDBCConnectionPoolParams/' + token )
        maxcapacity     = get('MaxCapacity')
        initialcapacity = get('InitialCapacity')
        if not (initialcapacity):
           initialcapacity = '0' 

        cd('/JDBCSystemResources/' + token + '/JDBCResource/' + token + '/JDBCDataSourceParams/' + token )
        jndinames = get('JNDINames')

        cd('/JDBCSystemResources/' + token + '/JDBCResource/' + token + '/JDBCConnectionPoolParams/' + token )
        testTableName = get('TestTableName')

        cd('/JDBCSystemResources/' + token + '/JDBCResource/' + token + '/JDBCDriverParams/' + token + '/Properties/' + token + '/Properties/user')
        user = get('Value')

        cd('/JDBCSystemResources/' + token + '/JDBCResource/' + token + '/JDBCDataSourceParams/' + token)
        globalTransactionsProtocol = get('GlobalTransactionsProtocol')

        p = ls('/JDBCSystemResources/' + token + '/JDBCResource/' + token + '/JDBCDriverParams/' + token + '/Properties/' + token + '/Properties')
        properties     = []
        propertyValues = []
        for token3 in p.split("dr--"):
            token3=token3.strip().lstrip().rstrip()
            if not token3 == '' and not token3 == 'user':
               properties.append(token3)
               cd('/JDBCSystemResources/' + token + '/JDBCResource/' + token + '/JDBCDriverParams/' + token + '/Properties/' + token + '/Properties/'+token3)
               propertyValues.append(get('Value'))

        n = ls('/SystemResources/'+token+'/Targets')
        target     = []
        targetType = []
        for token2 in n.split("dr--"):
            token2=token2.strip().lstrip().rstrip()
            if not token2 == '':
               target.append(token2)
               cd('/SystemResources/'+token+'/Targets/'+token2)
               targetType.append(get('Type'))

        print >>f, ";".join(map(quote, [domain+'/'+token,','.join(target),','.join(targetType),driver,','.join(jndinames),url,usexa,user,testTableName,globalTransactionsProtocol,','.join(properties),','.join(propertyValues),maxcapacity,initialcapacity,domain]))
f.close()

disconnect()
exit()
