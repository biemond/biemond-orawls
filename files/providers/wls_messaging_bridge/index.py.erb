
m = ls('/MessagingBridges',returnMap='true')

f = open_file("name;target;targettype;asyncenabled;batchinterval;batchsize;durabilityenabled;idletimemax;preservemsgproperty;qosdegradationallowed;qos;reconnectdelayincrease;reconnectdelaymax;reconnectdelaymin;selector;started;transactiontimeout;sourcedestination;targetdestination")
for token in m:
    print '___'+token+'___'
    cd('/MessagingBridges/'+token)

    if get('AsyncEnabled'):
       asyncenabled = '1'
    else:
       asyncenabled = '0'

    batchinterval = get('BatchInterval')
    batchsize = get('BatchSize')
    
    if get('DurabilityEnabled'):
       durabilityenabled = '1'
    else:
       durabilityenabled = '0'
    
    idletimemax = get('IdleTimeMaximum')
    if get('PreserveMsgProperty'):
       preservemsgproperty = '1'
    else:
       preservemsgproperty = '0'

    if get('QOSDegradationAllowed'):
       qosdegradationallowed = '1'
    else:
       qosdegradationallowed = '0'

    qos = get('QualityOfService')
    reconnectdelayincrease = get('ReconnectDelayIncrease')
    reconnectdelaymax = get('ReconnectDelayMaximum')
    reconnectdelaymin = get('ReconnectDelayMinimum')
    selector = get('Selector')
    
    if get('Started'):
       started = '1'
    else:
       started = '0'
    transactiontimeout = get('TransactionTimeout')

    sourcedestinationMbean = cmo.getSourceDestination()
    if sourcedestinationMbean:
       path = getPath(sourcedestinationMbean)
       cd("/"+path)
       sourcedestination  = get('Name')
       cd('/MessagingBridges/'+token)
    else:
       sourcedestination = ''

    targetdestinationMbean = cmo.getTargetDestination()
    if targetdestinationMbean:
       path = getPath(targetdestinationMbean)
       cd("/"+path)
       targetdestination  = get('Name')
       cd('/MessagingBridges/'+token)
    else:
       targetdestination = ''

    target, targetType = retrieve_target_list('/Deployments/'+token)

    add_index_entry(f, [domain+'/'+token,','.join(target),','.join(targetType),asyncenabled,batchinterval,batchsize,durabilityenabled,idletimemax,preservemsgproperty,qosdegradationallowed,qos,reconnectdelayincrease,reconnectdelaymax,reconnectdelaymin,selector,started,transactiontimeout,sourcedestination,targetdestination])
f.close()
report_back_success()
