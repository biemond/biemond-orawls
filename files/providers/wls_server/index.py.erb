

def quote(text):
	if text:
		return "\"" + str(text).replace("\"", "\"\"") + "\""
	else: 
		return ""

m = ls('/Servers')

f = open("/tmp/wlstScript.out", "w")
print >>f, "name;listenaddress;listenport;ssllistenport;sslenabled;sslhostnameverificationignored;machine;logfilename;classpath;arguments;jsseenabled;domain;custom_identity;custom_identity_keystore_filename;trust_keystore_file;custom_identity_alias"
for token in m.split("dr--"):
    token=token.strip().lstrip().rstrip()
    if token:
        print '___'+token+'___'
        cd('/Servers/'+token)
        listenAddress = get('ListenAddress')
        listenPort    = str(get('ListenPort'))

        if get("KeyStores") == "CustomIdentityAndCustomTrust":
          custom_identity = '1'
        else:
          custom_identity = '0'     

        custom_identity_keystore_filename = get("CustomIdentityKeyStoreFileName")
        trust_keystore_file               = get("CustomTrustKeyStoreFileName")


        cd('/Servers/'+token+'/SSL/'+token)
        sslListenPort                     = str(get('ListenPort'))
        sslEnabled                        = str(get('Enabled'))
        sslHostnameVerificationIgnored    = str(get('HostnameVerificationIgnored'))
        jsseEnabled                       = str(get('JSSEEnabled'))

        custom_identity_alias             = get("ServerPrivateKeyAlias")

        cd('/Servers/'+token+'/ServerStart/'+token)
        classpath     = get('ClassPath')
        if classpath == None:
            classpath = ''

        arguments     = get('Arguments')
        if arguments == None:
            arguments = ''

        cd('/Servers/'+token+'/Log/'+token)
        logfilename     = get('FileName')

        n = ls('/Servers/'+token+'/Machine')
        machine = 'none'
        for token2 in n.split("drw-"):
            token2=token2.strip().lstrip().rstrip()
            if token2:
               machine = token2

        print >>f, ";".join(map(quote, [domain+'/'+token, listenAddress, listenPort, sslListenPort, sslEnabled, sslHostnameVerificationIgnored, machine, logfilename, classpath, arguments,jsseEnabled,domain,custom_identity,custom_identity_keystore_filename,trust_keystore_file,custom_identity_alias]))
f.close()
print "~~~~COMMAND SUCCESFULL~~~~"
