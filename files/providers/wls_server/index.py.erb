
cd("/")
m = ls('/Servers',returnMap='true')

f = open_file("name;listenaddress;listenport;logintimeout;ssllistenport;sslenabled;sslhostnameverificationignored;sslhostnameverifier;two_way_ssl;client_certificate_enforced;useservercerts;machine;logfilename;log_file_min_size;log_filecount;log_rotate_logon_startup;log_rotationtype;log_number_of_files_limited;tunnelingenabled;log_http_filename;log_http_format;log_http_format_type;log_datasource_filename;classpath;arguments;jsseenabled;domain;custom_identity;custom_identity_keystore_filename;trust_keystore_file;custom_identity_alias;default_file_store;max_message_size;log_redirect_stderr_to_server;log_redirect_stdout_to_server;restart_max;log_http_file_count;log_http_number_of_files_limited;bea_home;weblogic_plugin_enabled;listenportenabled;auto_restart;autokillwfail;server_parameters;frontendhost;frontendhttpport;frontendhttpsport;log_date_pattern;log_stdout_severity;log_log_file_severity")
for token in m:
  print '___'+token+'___'
  cd('/Servers/'+token)
  listenAddress     = get('ListenAddress')
  listenPort        = str(get('ListenPort'))
  listenPortEnabled = str(get('ListenPortEnabled'))
  max_message_size  = str(get('MaxMessageSize'))
  tunnelingenabled  = str(get('TunnelingEnabled'))
  logintimeout	    = str(get('LoginTimeoutMillis'))
  restart_max       = str(get('RestartMax'))

  auto_restart      = str(get('AutoRestart'))
  autokillwfail     = str(get('AutoKillIfFailed'))
  server_parameters = str(get('Notes'))
  if get("KeyStores") == "CustomIdentityAndCustomTrust":
    custom_identity = '1'
  else:
    custom_identity = '0'

  custom_identity_keystore_filename = get("CustomIdentityKeyStoreFileName")
  trust_keystore_file               = get("CustomTrustKeyStoreFileName")
  weblogic_plugin_enabled           = str(get('WeblogicPluginEnabled'))

  cd('/Servers/'+token+'/SSL/'+token)
  sslListenPort                     = str(get('ListenPort'))
  sslEnabled                        = str(get('Enabled'))
  sslHostnameVerificationIgnored    = str(get('HostnameVerificationIgnored'))
  sslhostnameverifier               = str(get('HostnameVerifier'))
  two_way_ssl                       = str(get('TwoWaySSLEnabled'))
  client_certificate_enforced       = str(get('ClientCertificateEnforced'))
  jsseEnabled                       = str(get('JSSEEnabled'))
  useservercerts                    = str(get('UseServerCerts'))
  custom_identity_alias             = get("ServerPrivateKeyAlias")

  cd('/Servers/'+token+'/ServerStart/'+token)
  bea_home      = get('BeaHome')
  classpath     = get('ClassPath')
  if classpath == None:
      classpath = ''

  arguments     = get('Arguments')
  if arguments == None:
      arguments = ''

  cd('/Servers/'+token+'/WebServer/'+token)
  if get('FrontendHost'):
    frontendhost = get('FrontendHost')
  else:
    frontendhost = ''

  if get('FrontendHTTPPort'):
    frontendhttpport = get('FrontendHTTPPort')
  else:
    frontendhttpport = '0'

  if get('FrontendHTTPSPort'):
    frontendhttpsport = get('FrontendHTTPSPort')
  else:
    frontendhttpsport = '0'


  cd('/Servers/'+token+'/Log/'+token)
  logfilename                   = get('FileName')
  log_rotationtype              = get('RotationType')
  log_rotate_logon_startup      = str(get('RotateLogOnStartup'))
  log_number_of_files_limited   = str(get('NumberOfFilesLimited'))
  log_filecount                 = str(get('FileCount'))
  log_file_min_size             = str(get('FileMinSize'))
  log_redirect_stderr_to_server = str(get('RedirectStderrToServerLogEnabled'))
  log_redirect_stdout_to_server = str(get('RedirectStdoutToServerLogEnabled'))
  log_date_pattern              = get('DateFormatPattern')
  log_stdout_severity           = get('StdoutSeverity')
  log_log_file_severity         = get('LogFileSeverity')

  cd('/Servers/'+token+'/WebServer/'+token+'/WebServerLog/'+token)
  log_http_filename                = get('FileName')
  log_http_format                  = get('ELFFields')
  log_http_format_type             = get('LogFileFormat')
  log_http_file_count              = get('FileCount')
  log_http_number_of_files_limited = str(get('NumberOfFilesLimited'))
  print log_http_number_of_files_limited

  cd('/Servers/'+token+'/DataSource/'+token+'/DataSourceLogFile/'+token)
  log_datasource_filename          = get('FileName')

  cd('/Servers/'+token+'/DefaultFileStore/'+token)
  default_file_store = get('Directory')

  n = ls('/Servers/'+token+'/Machine')
  machine = ''
  for token2 in n.split("drw-"):
      token2=token2.strip().lstrip().rstrip()
      if token2:
         machine = token2

  add_index_entry(f, [domain+'/'+token, listenAddress, listenPort, logintimeout, sslListenPort, sslEnabled, sslHostnameVerificationIgnored, sslhostnameverifier, two_way_ssl, client_certificate_enforced, useservercerts, machine, logfilename,log_file_min_size,log_filecount,log_rotate_logon_startup,log_rotationtype,log_number_of_files_limited, tunnelingenabled,log_http_filename,log_http_format,log_http_format_type,log_datasource_filename, classpath, arguments,jsseEnabled,domain,custom_identity,custom_identity_keystore_filename,trust_keystore_file,custom_identity_alias,default_file_store,max_message_size, log_redirect_stderr_to_server, log_redirect_stdout_to_server, restart_max, log_http_file_count,log_http_number_of_files_limited, bea_home, weblogic_plugin_enabled, listenPortEnabled,auto_restart,autokillwfail,server_parameters,frontendhost,frontendhttpport,frontendhttpsport,log_date_pattern, log_stdout_severity, log_log_file_severity])

f.close()
report_back_success()
