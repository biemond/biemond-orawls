# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'



name                 = '<%= workmanager_name %>'
stuckthreads         = '<%= stuckthreads %>'
target               = '<%= target %>'
targettype           = '<%= targettype %>'
minthreadsconstraint = '<%= minthreadsconstraint %>'
maxthreadsconstraint = '<%= maxthreadsconstraint %>'
capacity             = '<%= capacity %>'

edit()
startEdit()

try:

    cd('/')
    domain = get('Name') 

    cd('/SelfTuning/'+domain+'/WorkManagers/'+name)

    if stuckthreads == '1':
      cmo.setIgnoreStuckThreads(true)
    else: 
      cmo.setIgnoreStuckThreads(false)

    print "target: "     +  target
    print "targettype: " +  targettype

    targets     = String(target).split(",")
    targettypes = String(targettype).split(",")
    targetList  = []
    for i in range(len(targets)):
      print "target "+targets[i] + " " + targettypes[i]
      targetList.append( ObjectName('com.bea:Name=' + targets[i] + ',Type='+targettypes[i]) )       
    
    set('Targets',jarray.array(targetList, ObjectName))


    cmo.setResponseTimeRequestClass(None)
    cmo.setFairShareRequestClass(None)
    cmo.setContextRequestClass(None)
    
    if minthreadsconstraint:
      cmo.setMinThreadsConstraint(getMBean('/SelfTuning/'+domain+'/MinThreadsConstraints/'+minthreadsconstraint))

    if maxthreadsconstraint:
      cmo.setMaxThreadsConstraint(getMBean('/SelfTuning/'+domain+'/MaxThreadsConstraints/'+maxthreadsconstraint))

    if capacity:
      cmo.setCapacity(getMBean('/SelfTuning/'+domain+'/Capacities/'+capacity))

    save()
    activate()          
    print "~~~~COMMAND SUCCESFULL~~~~"

except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    print "~~~~COMMAND FAILED~~~~"
    raise



