<%- |  String $domain_name,
       String $domain_dir,
       Integer $version, 
       Optional[String] $templateOHS = undef,
       String $template,
       Optional[String] $templateCoherence = undef,
       Optional[String] $nodemanager_username = undef,
       Optional[String] $nodemanager_password = undef,
       String $adminserver_address,
       Integer $adminserver_port = 7001,
       Optional[String] $ohs_standalone_listen_address = undef,
       Optional[Integer] $ohs_standalone_listen_port = undef,
       Optional[Integer] $ohs_standalone_ssl_listen_port = undef,
       String $download_dir, 
       String $weblogic_home_dir,
       Optional[String] $apps_dir,
       Optional[Boolean] $jsse_enabled = false,
       Optional[Boolean] $development_mode = true,
       String $adminserver_name = 'AdminServer',
       String $weblogic_user = 'weblogic',
       String $weblogic_password,
       String $jdk_home_dir,
       Optional[String] $domain_password = undef,
       Optional[Boolean] $adminserver_listen_on_all_interfaces = false,   
       Optional[Boolean] $nodemanager_secure_listener = true, 
       Optional[Boolean] $create_default_coherence_cluster = true,
       Hash $java_arguments = {}, 
       String $admin_nodemanager_log_dir,
       String $adminserver_machine_name = 'LocalMachine',
       Optional[Integer] $adminserver_ssl_port = undef,
       Boolean $custom_identity = false,
       Optional[String] $custom_identity_keystore_filename = undef,
       Optional[String] $custom_identity_keystore_passphrase = undef,
       Optional[String] $trust_keystore_file = undef, 
       Optional[String] $trust_keystore_passphrase = undef,
       Optional[String] $custom_identity_alias = undef,
       Optional[String] $custom_identity_privatekey_passphrase = undef,
       Optional[Boolean] $wls_apps_inside_domain = false,
       Optional[Boolean] $crossdomain_enabled = true | -%>


# load common defs
execfile('<%= $download_dir %>/utils.py')

WLHOME = '<%= $weblogic_home_dir %>'
DOMAIN_PATH = '<%= $domain_dir %>'
DOMAIN = '<%= $domain_name %>'

# security
JSSE_ENABLED = <%= $jsse_enabled %>
CUSTOM_IDENTITY_ENABLED = <%= $custom_identity %>
DEVELOPMENT_MODE = <%= $development_mode %>

WEBLOGIC_VERSION = <%= $version %>

ADMIN_SERVER = '<%= $adminserver_name %>'
ADMIN_USER = '<%= $weblogic_user %>'
ADMIN_PASSWORD = '<%= $weblogic_password %>'

JAVA_HOME = '<%= $jdk_home_dir %>'

DOMAIN_PASSWORD = '<%= $domain_password %>'
NODEMANAGER_USERNAME = '<%= $nodemanager_username %>'
NODEMANAGER_PASSWORD = '<%= $nodemanager_password %>'

ADMINSERVER_LISTEN_ON_ALL_INTERFACES = <%= $adminserver_listen_on_all_interfaces %>
NODEMANAGER_SECURE_LISTENER = <%= $nodemanager_secure_listener %>

CREATE_DEFAULT_COHERENCE_CLUSTER = <%= $create_default_coherence_cluster %>

<% if $java_arguments["ADM"] { %>
ADM_JAVA_ARGUMENTS = '<%= $java_arguments["ADM"] %>'
<% } %>
<% if !$java_arguments["ADM"] { %>
ADM_JAVA_ARGUMENTS = '-XX:PermSize=256m -XX:MaxPermSize=512m -Xms1024m -Xmx1024m -Dweblogic.Stdout=<%= $admin_nodemanager_log_dir %>/<%= $adminserver_name %>.out -Dweblogic.Stderr=<%= $admin_nodemanager_log_dir %>/<%= $adminserver_name %>_err.out'
<% } %>


if WEBLOGIC_VERSION in [1221, 12211, 12212, 12213, 12214]:
    if CREATE_DEFAULT_COHERENCE_CLUSTER == True:
        print 'Adding WLS Coherence Template'
        selectTemplate('<%= $templateCoherence %>')
    else:
        print('Start normal domain... with template <%= $template %>')
        selectTemplate('<%= $template %>')

print('Loading all required templates')
loadTemplates()

set_cross_domain('<%= crossdomain_enabled %>')

cd('/')
print('Set domain log')
change_log('domain', DOMAIN, '<%= $admin_nodemanager_log_dir %>')

print('Create machine <%= $adminserver_machine_name %> with type UnixMachine')
create_machine('UnixMachine', '<%= $adminserver_machine_name %>', '<%= $adminserver_address %>', NODEMANAGER_SECURE_LISTENER)

if ADMINSERVER_LISTEN_ON_ALL_INTERFACES:
    change_admin_server(ADMIN_SERVER, '<%= $adminserver_machine_name %>', None, <%= $adminserver_port %>, ADM_JAVA_ARGUMENTS, JAVA_HOME)
else:
    change_admin_server(ADMIN_SERVER, '<%= $adminserver_machine_name %>', '<%= $adminserver_address %>', <%= $adminserver_port %>, ADM_JAVA_ARGUMENTS, JAVA_HOME)

change_ssl_with_port(ADMIN_SERVER, JSSE_ENABLED, '<%= $adminserver_ssl_port %>')

if CUSTOM_IDENTITY_ENABLED == True:
    print('Set adminserver custom identity')
    change_custom_identity_store(ADMIN_SERVER, '<%= $custom_identity_keystore_filename %>', '<%= $custom_identity_keystore_passphrase %>', '<%= $trust_keystore_file %>', '<%= $trust_keystore_passphrase %>', '<%= $custom_identity_alias %>', '<%= $custom_identity_privatekey_passphrase %>')

print('Change AdminServer log')
change_log('server', ADMIN_SERVER, '<%= $admin_nodemanager_log_dir %>')

print('Set password...')
set_weblogic_password(ADMIN_USER, ADMIN_PASSWORD)

# Set domain save options:
# - ServerStartMode: Set mode to development.
# - JavaHome: Sets home directory for the JVM used when starting the server.

if DEVELOPMENT_MODE == True:
    setOption('ServerStartMode', 'dev')
else:
    setOption('ServerStartMode', 'prod')

setOption('JavaHome', JAVA_HOME)

print('write domain...')
# write path + domain name
writeDomain(DOMAIN_PATH)
closeTemplate()

readDomain(DOMAIN_PATH)
#
# Setting the domain password. If it isn't specfied, we use the admin password
#
if DOMAIN_PASSWORD is None or DOMAIN_PASSWORD == '':
    print 'Using default for domain password'
    encrypted_domain_password = encrypt(ADMIN_PASSWORD, DOMAIN_PATH)
else:
    encrypted_domain_password = encrypt(DOMAIN_PASSWORD, DOMAIN_PATH)

set_domain_password(DOMAIN, encrypted_domain_password)

#
# Setting the nodemanager password. If it isn't specfied, we use the admin password
#
if NODEMANAGER_PASSWORD is None or NODEMANAGER_PASSWORD == '':
    print 'Using default for nodemanager password'
    encrypted_nodemanager_password = encrypt(ADMIN_PASSWORD, DOMAIN_PATH)
else:
    encrypted_nodemanager_password = encrypt(NODEMANAGER_PASSWORD, DOMAIN_PATH)

if NODEMANAGER_USERNAME is None or NODEMANAGER_USERNAME == '':
    print 'Using default for nodemanager username'
    NODEMANAGER_USERNAME = ADMIN_USER

set_nodemanager_password(DOMAIN, encrypted_nodemanager_password, NODEMANAGER_USERNAME)

updateDomain()
closeDomain()

create_admin_startup_properties_file(DOMAIN_PATH + '/servers/' + ADMIN_SERVER + '/data/nodemanager', ADM_JAVA_ARGUMENTS)
create_boot_properties_file(DOMAIN_PATH + '/servers/' + ADMIN_SERVER + '/security', 'boot.properties', ADMIN_USER, ADMIN_PASSWORD)
create_boot_properties_file(DOMAIN_PATH + '/config/nodemanager', 'nm_password.properties', ADMIN_USER, ADMIN_PASSWORD)

print 'Exiting...'
exit()
